digraph "Ark::types::Contract"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Ark::types::Contract",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="A contract is a list of typed arguments that a function can follow."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" arguments",fontcolor="grey" ];
  Node2 [id="Node000002",label="std::vector\< Ark::types\l::Typedef \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" elements",fontcolor="grey" ];
  Node3 [id="Node000003",label="Ark::types::Typedef",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/dbf/structArk_1_1types_1_1Typedef.html",tooltip="A type definition within a contract."];
  Node4 -> Node3 [id="edge3_Node000003_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" name",fontcolor="grey" ];
  Node4 [id="Node000004",label="std::string",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node3 [id="edge5_Node000003_Node000006",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" types",fontcolor="grey" ];
  Node6 [id="Node000006",label="std::vector\< ValueType \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [id="edge6_Node000006_Node000007",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< ValueType \>",fontcolor="grey" ];
  Node7 [id="Node000007",label="std::vector\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [id="edge7_Node000007_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" elements",fontcolor="grey" ];
  Node8 [id="Node000008",label="T",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node2 [id="edge8_Node000002_Node000007",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< Ark::types::Typedef \>",fontcolor="grey" ];
}
