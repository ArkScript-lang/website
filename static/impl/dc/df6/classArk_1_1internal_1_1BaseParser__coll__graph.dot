digraph "Ark::internal::BaseParser"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Ark::internal::BaseParser",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_filename\nm_str",fontcolor="grey" ];
  Node2 [id="Node000002",label="std::string",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [id="edge3_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_it_to_row",fontcolor="grey" ];
  Node4 [id="Node000004",label="std::vector\< std::pair\l\< std::string::iterator,\l std::size_t \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" elements",fontcolor="grey" ];
  Node5 [id="Node000005",label="std::pair\< std::string\l::iterator, std::size_t \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [id="edge5_Node000005_Node000006",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" first_type",fontcolor="grey" ];
  Node6 [id="Node000006",label="std::string::iterator",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node5 [id="edge6_Node000005_Node000007",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< std::string::iterator,\l std::size_t \>",fontcolor="grey" ];
  Node7 [id="Node000007",label="std::pair\< T1, T2 \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [id="edge7_Node000007_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" first_type",fontcolor="grey" ];
  Node8 [id="Node000008",label="T1",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node7 [id="edge8_Node000007_Node000009",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" second_type",fontcolor="grey" ];
  Node9 [id="Node000009",label="T2",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node4 [id="edge9_Node000004_Node000010",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< std::pair\< std::string\l::iterator, std::size_t \> \>",fontcolor="grey" ];
  Node10 [id="Node000010",label="std::vector\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node10 [id="edge10_Node000010_Node000011",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" elements",fontcolor="grey" ];
  Node11 [id="Node000011",label="T",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [id="edge11_Node000001_Node000006",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_it\nm_next_it",fontcolor="grey" ];
  Node12 -> Node1 [id="edge12_Node000001_Node000012",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_sym",fontcolor="grey" ];
  Node12 [id="Node000012",label="Ark::internal::utf8\l_char_t",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$df/d83/classArk_1_1internal_1_1utf8__char__t.html",tooltip=" "];
  Node13 -> Node12 [id="edge13_Node000012_Node000013",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_repr",fontcolor="grey" ];
  Node13 [id="Node000013",label="std::array\< unsigned\l char, 5 \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node13 [id="edge14_Node000013_Node000014",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< unsigned char, 5 \>",fontcolor="grey" ];
  Node14 [id="Node000014",label="std::array\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node14 [id="edge15_Node000014_Node000011",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" elements",fontcolor="grey" ];
  Node15 -> Node1 [id="edge16_Node000001_Node000015",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_filepos",fontcolor="grey" ];
  Node15 [id="Node000015",label="Ark::internal::FilePosition",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/d0e/structArk_1_1internal_1_1FilePosition.html",tooltip="Describe a position in a given file ; handled by the BaseParser."];
}
